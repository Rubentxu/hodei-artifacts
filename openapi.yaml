openapi: 3.1.0
info:
  title: Hodei Artifacts API
  version: 0.1.0
  description: |
    API inicial MVP (OPENAPI-T1+T2) con compatibilidad ecosistemas (Maven/npm/PyPI).
    Endpoints core + rutas estilo gestores para consumo directo.
servers:
  - url: https://api.hodei.local
    description: Default (placeholder)

tags:
  - name: repositories
    description: Gestión de repositorios
  - name: artifacts
    description: Ingesta y distribución de artefactos
  - name: search
    description: Búsqueda básica
  - name: ecosystems
    description: Compatibilidad gestores (Maven/npm/PyPI)

paths:
  /v1/repositories:
    get:
      tags: [repositories]
      summary: Listar repositorios
      operationId: listRepositories
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Lista de repositorios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryListResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: [repositories]
      summary: Crear repositorio
      operationId: createRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepositoryRequest'
      responses:
        '201':
          description: Repositorio creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '409':
          description: Conflicto - nombre ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/repositories/{id}:
    get:
      tags: [repositories]
      summary: Obtener un repositorio
      operationId: getRepository
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalles del repositorio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '404':
          description: Repositorio no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags: [repositories]
      summary: Actualizar un repositorio
      operationId: updateRepository
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepositoryRequest'
      responses:
        '200':
          description: Repositorio actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '404':
          description: Repositorio no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags: [repositories]
      summary: Eliminar un repositorio
      operationId: deleteRepository
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Repositorio eliminado
        '404':
          description: Repositorio no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/artifacts:
    post:
      tags: [artifacts]
      summary: Subir artefacto (multipart)
      operationId: uploadArtifact
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file, metadata]
              properties:
                file:
                  type: string
                  format: binary
                  description: Binario del artefacto
                metadata:
                  type: string
                  format: json
                  description: JSON (checksum,mime,repository_id,version,ecosystem coords)
      responses:
        '202':
          description: Artefacto aceptado / creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactUploadResponse'
        '404':
          description: Repositorio no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Posible duplicado (idempotencia)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactUploadResponse'
        '422':
          description: Validación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/artifacts/{id}:
    get:
      tags: [artifacts]
      summary: Obtener artefacto (stream o URL presignada)
      operationId: getArtifact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: presigned
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Binario o JSON URL
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUrlResponse'
        '404':
          description: Artefacto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/search:
    get:
      tags: [search]
      summary: Búsqueda básica de artefactos
      operationId: searchArtifacts
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
          description: Substring
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Resultados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        '422':
          description: Parámetros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Ecosystems: Maven ---
  /v1/maven/{groupId}/{artifactId}/{version}/{artifactFile}:
    get:
      tags: [ecosystems]
      summary: Descargar artefacto Maven (JAR/POM)
      operationId: downloadMavenArtifact
      parameters:
        - name: groupId
          in: path
          required: true
          description: groupId (dot notation)
          schema:
            type: string
        - name: artifactId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: artifactFile
          in: path
          required: true
          description: archivo (artifactId-version(-classifier).jar|pom)
          schema:
            type: string
      responses:
        '200':
          description: Binario / POM
          content:
            application/java-archive:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/maven/metadata:
    get:
      tags: [ecosystems]
      summary: Metadata Maven (maven-metadata.xml)
      operationId: getMavenMetadata
      parameters:
        - name: groupId
          in: query
          required: true
          schema: { type: string }
        - name: artifactId
          in: query
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Metadata XML
          content:
            application/xml:
              schema:
                type: string
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Ecosystems: npm ---
  /v1/npm/{package}:
    get:
      tags: [ecosystems]
      summary: Metadata paquete npm
      operationId: getNpmPackage
      parameters:
        - name: package
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metadata npm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpmPackageMetadata'
        '404':
          description: Paquete no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/npm/{package}/-/{tarball}:
    get:
      tags: [ecosystems]
      summary: Descargar tarball npm
      operationId: downloadNpmTarball
      parameters:
        - name: package
          in: path
          required: true
          schema:
            type: string
        - name: tarball
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tarball
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --- Ecosystems: PyPI ---
  /v1/pypi/{package}/json:
    get:
      tags: [ecosystems]
      summary: Metadata PyPI paquete
      operationId: getPypiPackage
      parameters:
        - name: package
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metadata PyPI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PypiPackageMetadata'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/pypi/{package}/{version}/json:
    get:
      tags: [ecosystems]
      summary: Metadata PyPI versión
      operationId: getPypiPackageVersion
      parameters:
        - name: package
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metadata versión
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PypiPackageMetadata'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/pypi/{package}/{version}/download:
    get:
      tags: [ecosystems]
      summary: Descargar distribución PyPI
      operationId: downloadPypiDistribution
      parameters:
        - name: package
          in: path
          required: true
          schema: { type: string }
        - name: version
          in: path
          required: true
          schema: { type: string }
        - name: file
          in: query
          required: true
          description: Nombre archivo (wheel o sdist)
          schema:
            type: string
      responses:
        '200':
          description: Archivo distribuido
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Repository:
      type: object
      required: [id, name, created_at]
      properties:
        id: { type: string, format: uuid }
        name:
          type: string
          pattern: ^[a-z0-9._-]{3,50}$
          minLength: 3
          maxLength: 50
        description: { type: string, nullable: true, maxLength: 280 }
        created_at: { type: string, format: date-time }
        created_by: { type: string, format: uuid }
      additionalProperties: false
    CreateRepositoryRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
          pattern: ^[a-z0-9._-]{3,50}$
        description: { type: string, nullable: true, maxLength: 280 }
      additionalProperties: false
    UpdateRepositoryRequest:
      type: object
      properties:
        description: { type: string, nullable: true, maxLength: 280 }
      additionalProperties: false
    RepositoryListResponse:
      type: object
      required: [items, total, limit, offset]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        total: { type: integer, minimum: 0 }
        limit: { type: integer, minimum: 1, maximum: 100 }
        offset: { type: integer, minimum: 0 }
      additionalProperties: false
    Artifact:
      type: object
      required: [id, repository_id, version, file_name, size_bytes, checksum, created_at, created_by]
      properties:
        id: { type: string, format: uuid }
        repository_id: { type: string, format: uuid }
        version: { type: string, maxLength: 128 }
        file_name: { type: string, maxLength: 255 }
        size_bytes: { type: integer, format: int64, minimum: 1 }
        checksum: { type: string, pattern: '^[a-f0-9]{64}$' }
        mime: { type: string }
        created_at: { type: string, format: date-time }
        created_by: { type: string, format: uuid }
      additionalProperties: false
    ArtifactUploadResponse:
      type: object
      required: [artifact_id]
      properties:
        artifact_id: { type: string, format: uuid }
        deduplicated: { type: boolean }
      additionalProperties: false
    PresignedUrlResponse:
      type: object
      required: [url, expires_at]
      properties:
        url: { type: string, format: uri }
        expires_at: { type: string, format: date-time }
      additionalProperties: false
    SearchResultItem:
      allOf:
        - $ref: '#/components/schemas/Artifact'
        - type: object
          properties:
            score: { type: number, format: float }
    SearchResults:
      type: object
      required: [items, total, limit, offset]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultItem'
        total: { type: integer, minimum: 0 }
        limit: { type: integer, minimum: 1, maximum: 100 }
        offset: { type: integer, minimum: 0 }
      additionalProperties: false
    ErrorResponse:
      type: object
      required: [error, code]
      properties:
        error: { type: string }
        code:
          type: string
          enum: [REPOSITORY_NOT_FOUND, REPOSITORY_CONFLICT, INVALID_INPUT, ARTIFACT_NOT_FOUND, DUPLICATE_ARTIFACT, INTERNAL_ERROR]
        details: { type: object, additionalProperties: true }
        trace_id: { type: string }
      additionalProperties: false
    MavenCoordinates:
      type: object
      required: [groupId, artifactId, version]
      properties:
        groupId: { type: string }
        artifactId: { type: string }
        version: { type: string }
        classifier: { type: string, nullable: true }
        packaging: { type: string, default: jar }
      additionalProperties: false
    NpmPackageMetadata:
      type: object
      required: [name]
      properties:
        name: { type: string }
        dist-tags:
          type: object
          additionalProperties: { type: string }
        versions:
          type: object
          additionalProperties: { type: object }
      additionalProperties: true
    PypiPackageMetadata:
      type: object
      required: [info]
      properties:
        info:
          type: object
          required: [name]
          properties:
            name: { type: string }
            summary: { type: string }
            version: { type: string }
        releases:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                filename: { type: string }
                url: { type: string, format: uri }
        urls:
          type: array
          items:
            type: object
            properties:
              filename: { type: string }
              url: { type: string, format: uri }
      additionalProperties: true
    ArtifactEcosystem:
      type: string
      enum: [generic, maven, npm, pypi]
    ArtifactExtended:
      allOf:
        - $ref: '#/components/schemas/Artifact'
        - type: object
          properties:
            ecosystem: { $ref: '#/components/schemas/ArtifactEcosystem' }
            maven: { $ref: '#/components/schemas/MavenCoordinates' }
            npm_name: { type: string }
            pypi_name: { type: string }

security: []

x-meta:
  provenance: "OPENAPI-T1+T2 consolidated"
  notes:
    - Ecosystem endpoints integrados en seccion paths
    - Componentes extendidos (ArtifactExtended)
  nextTasks:
    - OPENAPI-T3 pipeline drift
    - OPENAPI-T4 regla PR drift

# Fin especificación
