version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    ports:
      - "{{MONGO_HOST_PORT}}:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - {{NETWORK_NAME}}
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "{{RABBITMQ_HOST_PORT}}:5672"
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - {{NETWORK_NAME}}
  
  localstack:
    image: localstack/localstack:0.14.3
    ports:
      - "{{S3_HOST_PORT}}:4566"
    environment:
      SERVICES: s3
    networks:
      - {{NETWORK_NAME}}

networks:
  {{NETWORK_NAME}}:
    driver: bridge
    ipam:
      config:
        - subnet: {{SUBNET}}

# Project name for Docker Compose (avoid container name conflicts)
# This is set via docker compose -p flag rather than in the file