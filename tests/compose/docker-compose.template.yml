version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    ports:
      - "{{MONGO_HOST_PORT}}:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - {{NETWORK_NAME}}
  
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "{{KAFKA_HOST_PORT}}:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:{{KAFKA_HOST_PORT}}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - {{NETWORK_NAME}}
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "{{ZOOKEEPER_HOST_PORT}}:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - {{NETWORK_NAME}}
  
  localstack:
    image: localstack/localstack:0.14.3
    ports:
      - "{{S3_HOST_PORT}}:4566"
    environment:
      SERVICES: s3
    networks:
      - {{NETWORK_NAME}}

networks:
  {{NETWORK_NAME}}:
    driver: bridge
    ipam:
      config:
        - subnet: {{SUBNET}}

# Project name for Docker Compose (avoid container name conflicts)
# This is set via docker compose -p flag rather than in the file