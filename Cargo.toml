[workspace]
# Active workspace members (only core libs + root app). Root crate (.) kept to allow the API binary.
members = [
    "crates/kernel",
    "crates/policies",
    "crates/hodei-iam",
    "crates/hodei-organizations",
    "crates/hodei-authorizer",
    ".",
]
resolver = "2"

[workspace.package]
edition = "2024"
version = "0.1.0"
license = "MIT"

[workspace.dependencies]
# Core async & runtime
tokio = { version = "^1.47", features = ["full"] }
async-trait = { version = "0.1.89" }
futures = { version = "0.3" }
futures-util = { version = "0.3" }
tokio-util = { version = "0.7" }

# Serialization / data
serde = { version = "^1.0", features = ["derive"] }
serde_json = { version = "^1.0" }
bincode = "1.3"
time = { version = "0.3", features = ["serde", "formatting", "parsing"] }
chrono = { version = "^0.4", features = ["serde"] }
uuid = { version = "1.18.1", features = ["v4", "serde"] }

# Crypto / security
ring = "^0.17"
sha2 = { version = "^0.10" }
ed25519-dalek = "2.0"
jsonwebtoken = "^9.3"

# HTTP / networking
axum = { version = "0.8.6", features = ["macros"] }
hyper = { version = "1", features = ["full"] }
reqwest = { version = "0.12.23", features = ["json"] }
tower = { version = "0.5", features = ["util"] }
tower-http = { version = "0.6.6", features = ["cors", "trace", "timeout", "compression-br"] }

# Storage / DB / messaging
redis = { version = "0.32.5", features = ["tokio-comp"] }
lapin = "3.6.0"
mongodb = "3.1.0"
surrealdb = "2.3.9"

# AWS (object store / config)
aws-config = "1.8.6"
aws-sdk-s3 = "1.106.0"
aws-types = { version = "1.3.8" }
aws-credential-types = { version = "1.2.6" }

# Policy / authorization engine
cedar-policy = "4.5.1"

# Containers / testing
testcontainers = { version = "0.25.0" }
testcontainers-modules = { version = "0.13.0" }

# Misc utilities
anyhow = { version = "^1.0" }
thiserror = { version = "2.0.17" }
tracing = { version = "^0.1" }
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "json"] }
base64 = "^0.22"
bytes = "1"
hex = "0.4"
mime = "0.3"
wiremock = "0.6.5"
mockall = "0.13.1"
bollard = "0.19.2"
regex = "1.0"
metrics = "0.24.1"

# Additional utilities
url = "2.5.0"
tracing-test = "0.2.5"
http = "1.1.0"
infer = "0.19.0"

[package]
name = "hodei-artifacts-api"
version = "0.1.0"
edition = "2024"
license = "MIT"
publish = false
description = "Hodei main API binary depending on internal bounded-context crates"

[features]
default = []
embedded = ["policies/embedded"]

[[bin]]
name = "hodei-artifacts-api"
path = "src/main.rs"

[dependencies]
# Internal bounded contexts (all library crates)
kernel = { path = "crates/kernel" }
policies = { path = "crates/policies", features = ["mem"] }
hodei-iam = { path = "crates/hodei-iam" }
hodei-organizations = { path = "crates/hodei-organizations" }
hodei-authorizer = { path = "crates/hodei-authorizer" }

# Core (pull from workspace to keep single-source versions)
tokio = { workspace = true }
axum = { workspace = true, features = ["macros", "multipart"] }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
http = "1.1.0"
async-trait = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }

# Auth / Policy
cedar-policy = { workspace = true }

# Observability / metrics
metrics = { workspace = true }

# Time / data
chrono = { workspace = true }
uuid = { workspace = true }

# Networking / HTTP client (if needed by API layer)
hyper = { workspace = true }
reqwest = { workspace = true }

# OpenAPI/Swagger
utoipa = { version = "5.4.0", features = ["axum_extras", "chrono", "uuid"] }
utoipa-swagger-ui = { version = "9.0", features = ["axum"] }

# Configuration
dotenvy = "0.15"

# AWS (if needed at API level; otherwise move to infrastructure-specific crate later)
aws-config = { workspace = true }

# Testing (only if integration tests live here; otherwise move to [dev-dependencies])
testcontainers = { workspace = true, optional = true }
testcontainers-modules = { workspace = true, optional = true }

[dev-dependencies]
surrealdb = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true }
anyhow = { workspace = true }
# Internal crates available for integration tests if needed
hodei-organizations = { path = "crates/hodei-organizations" }
hodei-authorizer = { path = "crates/hodei-authorizer" }
hodei-iam = { path = "crates/hodei-iam" }
policies = { path = "crates/policies", features = ["mem"] }
kernel = { path = "crates/kernel" }
