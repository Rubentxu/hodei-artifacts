# OPENAPI-T3: Pipeline validación drift OpenAPI + verificación mínima ecosistemas
# Ejecuta el script de comprobación y falla si faltan elementos o hay deriva conocida.
# Extensible: cuando exista generación automática (target/generated-openapi.yaml) la comparación
# devolverá exit code 3 y el workflow marcará fallo.

name: openapi-drift-check

on:
  pull_request:
    paths:
      - 'openapi.yaml'
      - 'scripts/check-openapi-drift.sh'
      - '.github/workflows/openapi-drift.yml'
      - 'crates/**.rs'
  push:
    branches: [ main ]
    paths:
      - 'openapi.yaml'
      - 'scripts/check-openapi-drift.sh'
      - '.github/workflows/openapi-drift.yml'

jobs:
  openapi-drift:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mostrar versión Git
        run: git --version

      - name: Validar script presente
        run: test -f scripts/check-openapi-drift.sh

      - name: Ejecutar validación OpenAPI
        run: |
          bash scripts/check-openapi-drift.sh
        continue-on-error: true
        id: drift

      - name: Interpretar resultado
        run: |
          code=${{ steps.drift.outcome }}
          exit_code=${{ steps.drift.outputs.exitcode || 0 }}
          # actions no expone directamente exit code; re-ejecutamos para capturar
          bash scripts/check-openapi-drift.sh || rc=$?
          rc=${rc:-0}
          echo "Resultado script: $rc"
          if [ "$rc" -eq 0 ]; then
            echo "OK sin drift."
          elif [ "$rc" -eq 3 ]; then
            echo "::error title=OpenAPI Drift Detected::Deriva detectada entre openapi.yaml y versión generada."
            exit 1
          else
            echo "::error title=OpenAPI Validation Failed::Falló validación (rc=$rc)."
            exit 1
          fi

      - name: Subir openapi.yaml como artifact (facilita inspección)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: openapi.yaml
          retention-days: 7

  # (Preparación OPENAPI-T4) Job que alerta si se tocan .rs pero no openapi.yaml
  contract-guard:
    runs-on: ubuntu-latest
    needs: openapi-drift
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detectar cambios en código sin cambios en contrato
        run: |
          set -e
          base="${{ github.event.pull_request.base.sha }}"
          head="${{ github.event.pull_request.head.sha }}"
          changed_files=$(git diff --name-only "$base" "$head")
          code_changed=$(echo "$changed_files" | grep -E '(^|/)crates/.*\.rs$' || true)
          contract_changed=$(echo "$changed_files" | grep -E '^openapi\.yaml$' || true)
          if [ -n "$code_changed" ] && [ -z "$contract_changed" ]; then
            echo "::warning title=Posible Drift::Se modificó código Rust sin actualizar openapi.yaml. Verifique si procede."
            # Para OPENAPI-T4 se cambiará a error (exit 1).
          else
            echo "Guard OK (code_changed=${code_changed:+yes} contract_changed=${contract_changed:+yes})."
          fi